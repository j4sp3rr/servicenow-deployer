<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>GET</http_method>
        <name>Run Installation Scripts</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId
	var GetStringValue = x_snc_devtools.GetStringValue;
		
	function GetParam(strParam)
	{
		var queryParams = request.queryParams;
		return x_snc_devtools.GetValue(queryParams,strParam);
	}
	
	function Error(strMessage,strDetails)
	{
		var myError = new sn_ws_err.ServiceError();
		myError.setStatus(200);
		myError.setMessage(strMessage);
		myError.setDetail(strDetails);
		response.setError(myError);	
	}
	
	if (IsActive() == false)
	{
		Error('INACTIVE','The Deployer app is inactive.');
		return;
	}
	
	var strAppSysId = GetParam('application_sys_id');
	var bStopOnError = GetBoolValue(GetParam('stop_on_error'));
	var bAsync = GetBoolValue(GetParam('async'));
	
	var grApp = x_snc_devtools.GetAppRecord(strAppSysId);
	if (x_snc_devtools.IsValidRecord(grApp) == false)
	{
		Error('APP_NOT_FOUND','The specified app cannot be found!');
		return;
	}
	
	var dependencies = x_snc_devtools.GetPackageDependencyTree(grApp);
	//Log(x_snc_devtools.RenderValue(dependencies));
	if (x_snc_devtools.GetValue(dependencies,'dependency_status_summary') == 'circular')
	{
		Error('CIRCULAR_DEPENDENCY','The given app or one of its depenendcies has a circular dependency. Such a circular dependency must be resolved prior to installation.');
		return;
	}	
	
	if (bAsync == true)
	{
		var params = {};
		var strProgressName = 'Running installation scripts for application: '+grApp.name;

		params['strAppSysId'] = GetStringValue(grApp.sys_id);
		var strWorkerId = x_snc_devtools.StartWorker(
			strProgressName,
			'x_snc_devtools.DevToolsWorkerAPI',
			'InstallApp',
			params);	
		
		if (IsValidSysId(strWorkerId) == false)
		{
			Error('ASYNC_START_FAILED','Failed to start running installation scripts asynchronously.');
			return;
		}
		
		var body = {};
		body.message = 'SUCCESS';
		body.detail = 'Started running installation scripts.';
		body.progress_id = strWorkerId;
		response.setBody(body);
		
	}
	else
	{
		var bResult = x_snc_devtools.InstallApp(grApp,bStopOnError);

		if (bResult == false)
		{
			Error('INSTALLATION_SCRIPT_FAILED','One of the AppInstall() functions in one of the applications returned an error. Please check the logs on the target instance for details!');
			return;

		}

		var body = {};
		body.message = 'SUCCESS';
		body.detail = 'All AppInstall() scripts have been executed successfully.';
		response.setBody(body);
	}
	
	return;
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_deployer/target/run_install_scripts</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/run_install_scripts</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Executes the AppInstall() functions of the given app and its dependencies.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-24 11:04:59</sys_created_on>
        <sys_id>823e40901b5965105b76777d8b4bcba3</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>Run Installation Scripts</sys_name>
        <sys_package display_value="Deployer" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Deployer">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_ws_operation_823e40901b5965105b76777d8b4bcba3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-03 13:13:50</sys_updated_on>
        <web_service_definition display_value="Deployer Target API">2c6640981b1965105b76777d8b4bcb6f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
