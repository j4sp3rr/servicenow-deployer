<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_deployer.GetApplicationStatus</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Retrieves an array of objects representing the applications available on the target instance. </description>
        <mobile_callable>false</mobile_callable>
        <name>GetApplicationStatus</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function GetApplicationStatus()
{
	var Clone = x_snc_devtools.Clone;
	var GetAppDefaultTestSuite = x_snc_devtools.GetAppDefaultTestSuite;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	var IsClonedDictionary = x_snc_devtools.IsClonedDictionary;
	var GetAppCurrentBranch = x_snc_devtools.GetAppCurrentBranch;

	var aApps = [];
	
	var grApps = new GlideRecord('sys_app');
	grApps.orderBy('name');
	grApps.query();
	while (grApps.next())
	{
		var app = CleanUpPackageObject(grApps);
				
		// Default Test Suite
		var strTestSuiteSysId = GetAppDefaultTestSuite(app.sys_id);
		if (IsValidSysId(strTestSuiteSysId) == true)
		{
			app.atf_test_suite_default_sys_id = strTestSuiteSysId;
		}

		// Branch
		var strBranch = GetAppCurrentBranch(grApps);
		if (strBranch == false)
		{
			strBranch = '';
		}
		app['branch'] = strBranch;

		// Tables
		var aSDBOs = [];
		var grSDBO = new GlideRecord('sys_db_object');
		grSDBO.addQuery('sys_scope','=',app.sys_id);
		grSDBO.query();
		while (grSDBO.next())
		{
			aSDBOs.push(CleanUpSysDBObjectObject(grSDBO));
		}
		app['_sys_db_object'] = aSDBOs;
		
		// Columns
		var aSDs = [];
		var grSD = new GlideRecord('sys_dictionary');
		grSD.addQuery('sys_scope','=',app.sys_id);
		grSD.addQuery('element','!=','null');
		grSD.addQuery('sys_class_name','=','sys_dictionary');
		grSD.query();
		while (grSD.next())
		{
			if (IsClonedDictionary(grSD) == false)
			{
				aSDs.push(CleanUpSysDictionaryObject(grSD));
			}			
		}
		app['_sys_dictionary'] = aSDs;	

		// Dependencies
		var aDependencies = [];
		var grDependencies = new GlideRecord('x_snc_devtools_dependency');
		grDependencies.addQuery('sys_scope','=',app.sys_id);
		grDependencies.query();
		while (grDependencies.next())
		{
			aDependencies.push(CleanUpDependencyObject(grDependencies));
		}
		app['_dependencies'] = aDependencies;

		aApps.push(app);
	}
	
	var grCustomizations = new GlideRecord('sys_app_customization');
	grCustomizations.query();
	while (grCustomizations.next())
	{
		aApps.push(Clone(grCustomizations));
	}
		
	return aApps;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-09-21 13:33:07</sys_created_on>
        <sys_id>b5d3c5a31b91fd10cd6153d16b4bcb94</sys_id>
        <sys_mod_count>40</sys_mod_count>
        <sys_name>GetApplicationStatus</sys_name>
        <sys_package display_value="Deployer WORK IN PROGRESS" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Deployer WORK IN PROGRESS">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_script_include_b5d3c5a31b91fd10cd6153d16b4bcb94</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-17 14:21:58</sys_updated_on>
    </sys_script_include>
</record_update>
