<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>GET</http_method>
        <name>Get Credential</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var IsValidUrl = x_snc_devtools.IsValidUrl;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetRecord = x_snc_devtools.GetRecord;
		
	function GetParam(strParam)
	{
		var queryParams = request.queryParams;
		return x_snc_devtools.GetValue(queryParams,strParam);
	}

	function Error(strMessage,strDetails)
	{
		var myError = new sn_ws_err.ServiceError();
		myError.setStatus(200);
		myError.setMessage(strMessage);
		myError.setDetail(strDetails);
		response.setError(myError);	
	}
	
	if (IsActive() == false)
	{
		Error('INACTIVE','The Deployer app is inactive.');
		return;
	}
	
	var strRepoUrl = GetStringValue(GetParam('repo_url'));
	if (IsValidUrl(strRepoUrl) == false)
	{
		Error('REPO_URL_INVALID','No valid repository url has been provided.');
		return;
	}

	var grRepoCredential = GetRepositoryCredentialRecord(strRepoUrl);
	if (IsValidRecord(grRepoCredential) == false)
	{
		Error('NO_REPOSITORY_CREDENTIAL_AVAILABLE','No repository credential record is mapped to the given repository url.');
		return;
	}

	var grCredential = GetRecord('discovery_credentials',grRepoCredential.credential);
	if (IsValidRecord(grCredential) == false)
	{
		Error('NO_CREDENTIAL_AVAILABLE','No credential is mapped to the given repository url.');
		return;
	}

	var result = {};

	result.credential_sys_id = GetStringValue(grCredential.sys_id);
	result.mid_server_sys_id = GetStringValue(grRepoCredential.mid_server);
	result.message = 'SUCCESS';
	result.detail = 'Credential is available.';
		
	response.setBody(result);
	
	return;

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_deployer/target/get_credential</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/get_credential</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Returns the Sys IDs of a credential record and the mid server based on the url.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-27 15:49:34</sys_created_on>
        <sys_id>b2cbf968c3b29a505a37f907050131f1</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Get Credential</sys_name>
        <sys_package display_value="Deployer" source="x_snc_deployer">394148f9db1c2d906a03dad1f396197a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Deployer">394148f9db1c2d906a03dad1f396197a</sys_scope>
        <sys_update_name>sys_ws_operation_b2cbf968c3b29a505a37f907050131f1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-02 13:26:02</sys_updated_on>
        <web_service_definition display_value="Deployer Target API">2c6640981b1965105b76777d8b4bcb6f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
